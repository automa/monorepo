name: Deploy Production (console)
on:
  push:
    branches: [production]
    paths:
      - .github/workflows/deploy-production-console.yml
      - packages/common/src/**
      - packages/console/public/**
      - packages/console/src/**
      - packages/console/index.html
      - packages/console/vite.config.mts
      - pnpm-lock.yaml
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
jobs:
  deploy-production-console:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: 'node_modules'
          key: deps-${{ hashFiles('**/pnpm-lock.yaml', '**/schema.prisma') }}
          restore-keys: |
            deps-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Compile typescript
        run: pnpm --filter @automa/common build
      - name: Build site
        env:
          NODE_ENV: production
          VITE_API_URI: ${{ secrets.PRODUCTION_API_URI_CONSOLE }}
          VITE_GRAPHQL_URI: ${{ secrets.PRODUCTION_GRAPHQL_URI_CONSOLE }}
          VITE_SEGMENT_KEY: ${{ secrets.PRODUCTION_SEGMENT_KEY_CONSOLE }}
          VITE_SEGMENT_HOST: ${{ secrets.PRODUCTION_SEGMENT_HOST_CONSOLE }}
          VITE_SENTRY_DSN: ${{ secrets.PRODUCTION_SENTRY_DSN_CONSOLE }}
          VITE_SENTRY_HOST: ${{ secrets.PRODUCTION_SENTRY_HOST_CONSOLE }}
          VITE_STATSIG_KEY: ${{ secrets.PRODUCTION_STATSIG_KEY_CONSOLE }}
        run: pnpm build
        working-directory: packages/console
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID_CONSOLE }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY_CONSOLE }}
          AWS_REGION: ${{ secrets.PRODUCTION_AWS_REGION_CONSOLE }}
        run: |
          aws s3 sync packages/console/build s3://${{ secrets.PRODUCTION_AWS_S3_BUCKET_CONSOLE }} \
            --exclude '*.html' \
            --cache-control max-age=31536000
          aws s3 sync packages/console/build s3://${{ secrets.PRODUCTION_AWS_S3_BUCKET_CONSOLE }} \
            --exclude '*' --include '*.html'
      - name: Invalidate cloudfront cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID_CONSOLE }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY_CONSOLE }}
          AWS_REGION: ${{ secrets.PRODUCTION_AWS_REGION_CONSOLE }}
        run: aws cloudfront create-invalidation
          --distribution-id ${{ secrets.PRODUCTION_AWS_CLOUDFRONT_DISTRIBUTION_CONSOLE }}
          --paths '/index.html'
