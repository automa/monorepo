name: Deploy Production (marketing)
on:
  push:
    branches: [production]
    paths:
      - .github/workflows/deploy-production-marketing.yml
      - packages/prisma/schema.prisma
      - packages/prisma/src/**
      - packages/marketing/public/**
      - packages/marketing/src/**
      - packages/marketing/next.config.mjs
      - packages/marketing/tailwind.config.ts
      - pnpm-lock.yaml
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
jobs:
  deploy-production-marketing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: 'node_modules'
          key: deps-${{ hashFiles('**/pnpm-lock.yaml', '**/schema.prisma') }}
          restore-keys: |
            deps-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build site
        env:
          NEXT_PUBLIC_NODE_ENV: production
          NEXT_PUBLIC_CONSOLE_URL: ${{ secrets.PRODUCTION_CONSOLE_URL_MARKETING }}
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
        run: pnpm build
        working-directory: packages/marketing
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID_MARKETING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY_MARKETING }}
          AWS_REGION: ${{ secrets.PRODUCTION_AWS_REGION_MARKETING }}
        run: |
          aws s3 sync packages/marketing/build s3://${{ secrets.PRODUCTION_AWS_S3_BUCKET_MARKETING }} \
            --exclude '*.html' \
            --cache-control max-age=31536000
          aws s3 sync packages/marketing/build s3://${{ secrets.PRODUCTION_AWS_S3_BUCKET_MARKETING }} \
            --exclude '*' --include '*.html'
      - name: Invalidate cloudfront cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID_MARKETING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY_MARKETING }}
          AWS_REGION: ${{ secrets.PRODUCTION_AWS_REGION_MARKETING }}
        run: |
          HTML_PATHS=$(find ./build -name "*.html" | sed 's|./build||g' | tr '\n' ' ')
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.PRODUCTION_AWS_CLOUDFRONT_DISTRIBUTION_MARKETING }} \
            --paths $HTML_PATHS
        working-directory: packages/marketing
