enum BotType {
  manual
  scheduled
}

type Query {
  bots(org_id: Int!): [Bot!]!
  bot(org_id: Int!, name: String!): Bot!
  publicBots(filter: PublicBotsFilter): [PublicBot!]!
  publicBot(org_name: String!, name: String!): PublicBot!
}

type Mutation {
  botCreate(org_id: Int!, input: BotCreateInput!): Bot!
  botUpdate(org_id: Int!, name: String!, input: BotUpdateInput!): Bot!
  botPublish(org_id: Int!, name: String!): Bot!
}

interface BotBase {
  id: Int!
  name: String!
  short_description: String!
  image_url: String
  type: BotType!
  paths: [String!]!
  description: JSON
  homepage: String
  is_published: Boolean!
  is_preview: Boolean!
  is_deterministic: Boolean!
}

type PublicBot implements BotBase @inherits(type: "BotBase") {
  org: PublicOrg!
  installation(org_id: Int!): PublicBotInstallation
}

input PublicBotsFilter {
  type: BotType
  is_deterministic: Boolean
}

type Bot implements BotBase @inherits(type: "BotBase") {
  webhook_url: String!
  webhook_secret: String!
  draft_paths: [String!]!
  published_at: DateTime
  created_at: DateTime!

  org: Org!
}

input BotCreateInput {
  name: String!
  type: BotType!
  webhook_url: String!
  short_description: String!
  draft_paths: [String!]!
  description: JSON
  homepage: String
}

input BotUpdateInput {
  webhook_url: String
  short_description: String
  draft_paths: [String!]
  description: JSON
  homepage: String
}
