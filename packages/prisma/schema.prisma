generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://automa@localhost:5432/automa"
}

model users {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  email          String           @unique @db.Citext
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  user_orgs      user_orgs[]
  user_providers user_providers[]
  user_repos     user_repos[]
}

model orgs {
  id                     Int         @id @default(autoincrement())
  name                   String      @db.VarChar(255)
  provider_type          provider
  provider_id            String      @db.VarChar(255)
  is_user                Boolean     @default(false)
  has_installation       Boolean     @default(false)
  created_at             DateTime    @default(now()) @db.Timestamp(6)
  github_installation_id Int?        @unique
  repos                  repos[]
  user_orgs              user_orgs[]

  @@unique([provider_type, provider_id])
}

model repos {
  id                 Int          @id @default(autoincrement())
  org_id             Int
  name               String       @db.VarChar(255)
  provider_id        String       @db.VarChar(255)
  is_private         Boolean      @default(false)
  is_archived        Boolean      @default(false)
  has_installation   Boolean      @default(false)
  created_at         DateTime     @default(now()) @db.Timestamp(6)
  settings           Json?
  last_commit_synced String?      @db.VarChar(40)
  orgs               orgs         @relation(fields: [org_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_repos         user_repos[]

  @@unique([org_id, provider_id])
}

model user_providers {
  id             Int      @id @default(autoincrement())
  user_id        Int
  provider_type  provider
  provider_id    String   @db.VarChar(255)
  provider_email String   @db.Citext
  refresh_token  String   @unique @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  users          users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_type, provider_id])
  @@unique([user_id, provider_type])
}

model user_orgs {
  id         Int      @id @default(autoincrement())
  user_id    Int
  org_id     Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  orgs       orgs     @relation(fields: [org_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, org_id])
}

model user_repos {
  id         Int      @id @default(autoincrement())
  user_id    Int
  repo_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  repos      repos    @relation(fields: [repo_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, repo_id])
}

enum provider {
  github
  gitlab
  bitbucket
}
